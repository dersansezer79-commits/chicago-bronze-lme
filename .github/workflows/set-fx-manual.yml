name: Set FX Manually (TCMB + fx.json)

on:
  workflow_dispatch:
    inputs:
      usdtry: { description: "USD/TRY (e.g., 41.15)", required: true, type: string }
      eurtry: { description: "EUR/TRY (optional)",     required: false, type: string }
      gbptry: { description: "GBP/TRY (optional)",     required: false, type: string }
      xauusd: { description: "XAU/USD (optional)",     required: false, type: string }
      gram_try: { description: "Gram Altın TRY (optional)", required: false, type: string }
      fx_field:
        description: "TCMB field"
        required: false
        type: choice
        options: [ForexSelling, BanknoteSelling]
        default: ForexSelling
      note: { description: "Note (source/date)", required: false, type: string }

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with: { node-version: "20" }

      - name: Write tcmb.json + fx.json
        env:
          INPUT_USDTRY: ${{ github.event.inputs.usdtry }}
          INPUT_EURTRY: ${{ github.event.inputs.eurtry }}
          INPUT_GBPTRY: ${{ github.event.inputs.gbptry }}
          INPUT_XAUUSD: ${{ github.event.inputs.xauusd }}
          INPUT_GRAM_TRY: ${{ github.event.inputs.gram_try }}
          INPUT_FX_FIELD: ${{ github.event.inputs.fx_field }}
          INPUT_NOTE: ${{ github.event.inputs.note }}
          GITHUB_RUN_ID: ${{ github.run_id }}
        run: |
          node - <<'JS'
          const fs = require('fs');
          const path = require('path');
          const toF = s => s ? parseFloat(String(s).replace(',', '.')) : NaN;

          const fmtTR = new Intl.DateTimeFormat('tr-TR',{timeZone:'Europe/Istanbul', day:'2-digit', month:'2-digit', year:'numeric'});
          const tcmbPath = path.join('lme_automation','tcmb.json');
          fs.mkdirSync(path.dirname(tcmbPath), { recursive: true });

          let tcmb = fs.existsSync(tcmbPath) ? JSON.parse(fs.readFileSync(tcmbPath,'utf8')) : {
            as_of: fmtTR.format(new Date()),
            source: "manual@GitHubActions",
            field: "ForexSelling",
            USDTRY: null, EURTRY: null, GBPTRY: null,
            gold: { XAUUSD: null, gram_try: null },
            updated_at: new Date().toISOString()
          };

          const updNum = (cur, envName) => {
            const v = toF(process.env[envName]);
            return isFinite(v) ? v : (cur ?? null);
          };

          tcmb.USDTRY = updNum(tcmb.USDTRY, 'INPUT_USDTRY');
          tcmb.EURTRY = updNum(tcmb.EURTRY, 'INPUT_EURTRY');
          tcmb.GBPTRY = updNum(tcmb.GBPTRY, 'INPUT_GBPTRY');
          tcmb.gold = {
            XAUUSD: updNum(tcmb.gold?.XAUUSD, 'INPUT_XAUUSD'),
            gram_try: updNum(tcmb.gold?.gram_try, 'INPUT_GRAM_TRY')
          };

          tcmb.field = process.env.INPUT_FX_FIELD || tcmb.field || "ForexSelling";
          tcmb.source = process.env.INPUT_NOTE ? `manual@GitHubActions — ${process.env.INPUT_NOTE}` : "manual@GitHubActions";
          tcmb.as_of = fmtTR.format(new Date());
          tcmb.updated_at = new Date().toISOString();
          tcmb.meta = { stamp: new Date().toISOString(), run_id: process.env.GITHUB_RUN_ID };

          fs.writeFileSync(tcmbPath, JSON.stringify(tcmb, null, 2));
          console.log('Wrote', tcmbPath);

          // mirror for legacy readers
          const fxPath = path.join('fx.json');
          fs.writeFileSync(fxPath, JSON.stringify({ USDTRY: tcmb.USDTRY, source: "mirror:lme_automation/tcmb.json", field: tcmb.field, as_of: tcmb.as_of, updated_at: tcmb.updated_at }, null, 2));
          console.log('Wrote', fxPath);
          JS

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "chore: manual TCMB FX update (tcmb.json + fx.json)"
          commit_all: true
