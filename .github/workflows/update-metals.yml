name: Update metals.json (Metals.Dev → lme_automation)

on:
  schedule:
    - cron: "0 5 * * *"   # daily 08:00 Türkiye
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-node@v4
        with: { node-version: 20 }

      - name: Build lme_automation/lme.json (PB + WSJ/USA in USD/lb)
        env:
          METALS_DEV_API_KEY: ${{ secrets.METALS_DEV_API_KEY }}
          OUT_PATH: lme_automation/lme.json
        run: |
          mkdir -p "$(dirname "$OUT_PATH")"
          node - <<'NODE'
          const fs = require('fs');
          const path = process.env.OUT_PATH || 'lme_automation/lme.json';
          const key  = process.env.METALS_DEV_API_KEY;
          if (!key) throw new Error('Missing METALS_DEV_API_KEY');

          const LB_PER_KG = 2.20462262185;      // 1 kg = 2.20462 lb
          const round3 = v => (v == null ? v : Math.round(v * 1000) / 1000);
          const round4 = v => (v == null ? v : Math.round(v * 10000) / 10000);

          const url = `https://api.metals.dev/v1/latest?api_key=${key}&currency=USD&unit=kg`;

          (async () => {
            const r = await fetch(url, { headers: { Accept: 'application/json' }});
            const d = await r.json();
            if (d.status !== 'success') { console.error(d); process.exit(1); }

            const m = d.metals || {};
            const c = d.currencies || {};
            const usdtry = c.TRY ? (1 / c.TRY) : null;

            const pick = (lmeKey, genericKey) => {
              if (m[lmeKey] != null) return { value: m[lmeKey], source: lmeKey };
              if (m[genericKey] != null) return { value: m[genericKey], source: genericKey };
              return { value: null, source: null };
            };

            const Al = pick('lme_aluminum', 'aluminum');
            const Cu = pick('lme_copper',   'copper');
            const Pb = pick('lme_lead',     'lead');      // PB
            const Ni = pick('lme_nickel',   'nickel');
            const Zn = pick('lme_zinc',     'zinc');

            // WSJ/USA = COMEX Copper (prefer comex_copper; fallback to LME copper)
            const comexKg = (m.comex_copper != null) ? m.comex_copper : Cu.value;
            const comexSrc = (m.comex_copper != null) ? 'comex_copper' : (Cu.source || 'copper');
            const comexLb  = (comexKg != null) ? (comexKg / LB_PER_KG) : null;  // USD/lb

            const out = {
              timestamp: d.timestamp ?? new Date().toISOString(),
              currency: 'USD',
              unit: 'kg',
              basis: 'latest',
              meta: {
                usdtry,
                units: { usd_per_kg: 'USD/kg', wsj_usa_copper_lb: 'USD/lb' },
                sources_used: {
                  aluminum: Al.source, copper: Cu.source, lead: Pb.source,
                  nickel: Ni.source, zinc: Zn.source, wsj_usa_copper: comexSrc
                }
              },
              usd_per_kg: {
                aluminum: round3(Al.value),
                copper:   round3(Cu.value),
                lead:     round3(Pb.value),
                nickel:   round3(Ni.value),
                zinc:     round3(Zn.value)
              },
              benchmarks: {
                wsj_usa_copper_lb: round4(comexLb),  // USD/lb (matches WSJ/Investing style)
                wsj_usa_copper_kg: round3(comexKg)   // same value in USD/kg for reference
              },
              aliases: {
                PB: {
                  path: 'usd_per_kg.lead',
                  unit: 'USD/kg',
                  usd: round3(Pb.value),
                  source: Pb.source
                },
                WSJ_USA: {
                  path: 'benchmarks.wsj_usa_copper_lb',
                  unit: 'USD/lb',
                  usd: round4(comexLb),
                  source: comexSrc
                }
              }
            };

            fs.writeFileSync(path, JSON.stringify(out, null, 2));
            console.log('Wrote', path);
            console.log('Preview:', {
              PB_lead_usd_per_kg: out.usd_per_kg.lead,
              WSJ_USA_usd_per_lb: out.benchmarks.wsj_usa_copper_lb,
              source: out.meta.sources_used.wsj_usa_copper
            });
          })().catch(e => { console.error(e); process.exit(1); });
          NODE

      - name: Commit & push ONLY lme_automation/lme.json
        run: |
          git config user.name  "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add -f lme_automation/lme.json
          git commit -m "chore: update lme_automation/lme.json (Metals.Dev + PB & WSJ/USA USD/lb)" || { echo "No changes"; exit 0; }
          git push
